{"version":3,"file":"pageselector.min.js","sources":["../src/pageselector.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript to handle ouwiki.\n *\n * @module mod_ouwiki/pageselector\n * @copyright 2024 The Open University\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Pending from 'core/pending';\nclass PageSelector {\n    /**\n     * Initialize the PageSelector class.\n     * @param {Array} pagesSelected Array of selected page IDs passed from PHP.\n     */\n    init(pagesSelected) {\n        // Find all index trees.\n        const pendingpage = new Pending('mod_ouwiki/indexTrees');\n        const indexTrees = document.querySelectorAll('.ouw_indextree');\n        indexTrees.forEach((list) => {\n            // Find all page checkboxes within the index tree.\n            const checkboxes = list.querySelectorAll('input.ouwiki_page_checkbox');\n            checkboxes.forEach((checkbox) => {\n                const pageId = checkbox.value;\n\n                // Check if the page is selected.\n                if (pagesSelected && pagesSelected.includes(pageId)) {\n                    checkbox.checked = true;\n                }\n\n                // Add click event listener to each checkbox.\n                checkbox.addEventListener('click', (event) => {\n                    const pending = new Pending('mod_ouwiki/childCheckboxes');\n                    const isChecked = event.target.checked;\n\n                    // Find child checkboxes within the same branch and update their state.\n                    const childCheckboxes = event.target.closest('li')?.querySelectorAll('ul li input.ouwiki_page_checkbox');\n                    if (childCheckboxes) {\n                        childCheckboxes.forEach((child) => {\n                            child.checked = isChecked;\n                        });\n                    }\n                    pending.resolve();\n                });\n            });\n        });\n        pendingpage.resolve();\n    }\n}\n\nexport const init = (pagesSelected) => {\n    const pageSelector = new PageSelector();\n    pageSelector.init(pagesSelected);\n};\n"],"names":["PageSelector","init","pagesSelected","pendingpage","Pending","document","querySelectorAll","forEach","list","checkbox","pageId","value","includes","checked","addEventListener","event","pending","isChecked","target","childCheckboxes","closest","_event$target$closest","child","resolve"],"mappings":";;;;;;;kJAuBMA,aAKFC,KAAKC,qBAEKC,YAAc,IAAIC,iBAAQ,yBACbC,SAASC,iBAAiB,kBAClCC,SAASC,OAEGA,KAAKF,iBAAiB,8BAC9BC,SAASE,iBACVC,OAASD,SAASE,MAGpBT,eAAiBA,cAAcU,SAASF,UACxCD,SAASI,SAAU,GAIvBJ,SAASK,iBAAiB,SAAUC,wCAC1BC,QAAU,IAAIZ,iBAAQ,8BACtBa,UAAYF,MAAMG,OAAOL,QAGzBM,8CAAkBJ,MAAMG,OAAOE,QAAQ,8CAArBC,sBAA4Bf,iBAAiB,oCACjEa,iBACAA,gBAAgBZ,SAASe,QACrBA,MAAMT,QAAUI,aAGxBD,QAAQO,mBAIpBpB,YAAYoB,yBAICrB,iBACI,IAAIF,cACZC,KAAKC"}