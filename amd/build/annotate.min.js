define("mod_ouwiki/annotate",["exports","mod_ouwiki/annotatemodal","core/local/aria/focuslock","core/modal_events"],(function(_exports,_annotatemodal,FocusLockManager,_modal_events){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * JavaScript to handle ouwiki.
   *
   * @module mod_ouwiki/annotate
   * @copyright 2024 The Open University
   * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_annotatemodal=_interopRequireDefault(_annotatemodal),FocusLockManager=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(FocusLockManager),_modal_events=_interopRequireDefault(_modal_events);class Annotate{constructor(){this.currentMarker=null,this.modal=null}async init(){await this.setupDialog(),await this.setupMarkers()}async setupDialog(){this.modal=await _annotatemodal.default.create({})}async showDialog(marker){if(!this.modal)return;this.currentMarker=marker.id;const annotationTextArea=this.modal.getBody().find("#annotationtext");annotationTextArea.length&&(annotationTextArea.val(""),annotationTextArea.focus()),await this.setupDialog(),this.modal.show();const $root=await this.modal.getRoot(),textarea=$root.find("#annotationtext")[0];FocusLockManager.trapFocus(document.querySelector(".annotate-modal")),$root.on(_modal_events.default.shown,(()=>{textarea.focus()})),$root.on(_modal_events.default.hidden,(()=>{this.modal.destroy(),FocusLockManager.untrapFocus()})),$root.on(_modal_events.default.save,(e=>{e.preventDefault();const annotationText=$root.find("#annotationtext").val();this.newAnnotation(annotationText),this.modal.hide()}))}async setupMarkers(){document.querySelectorAll("span.ouwiki-annotation-marker").forEach((marker=>{marker.style.cursor="pointer",marker.tabIndex=0,marker.addEventListener("keydown",(async e=>{"Enter"!==e.key&&" "!==e.key||(e.preventDefault(),await this.showDialog(marker))})),marker.addEventListener("click",(async()=>{await this.showDialog(marker)}))}))}newAnnotation(newText){const annotationCount=document.getElementById("annotationcount"),annotationNum=parseInt((null==annotationCount?void 0:annotationCount.textContent)||"0",10)+1,newFItem=document.createElement("div");newFItem.id="newfitem".concat(annotationNum),newFItem.className="fitem",newFItem.style.display="none";const fItemTitle=document.createElement("div");fItemTitle.className="fitemtitle";const fItemLabel=document.createElement("label");fItemLabel.htmlFor="id_annotationedit".concat(annotationNum),fItemLabel.textContent=annotationNum,fItemTitle.appendChild(fItemLabel);const fElement=document.createElement("div");fElement.className="felement ftextarea";const fElementTextarea=document.createElement("textarea");fElementTextarea.id="id_annotationedit".concat(annotationNum),fElementTextarea.name="new".concat(this.currentMarker.substring(6)),fElementTextarea.rows=3,fElementTextarea.cols=40,fElementTextarea.value=newText,fElementTextarea.textContent=newText,fElement.appendChild(fElementTextarea),newFItem.appendChild(fItemTitle),newFItem.appendChild(fElement);const endMarker=document.getElementById("end");endMarker.parentNode.parentNode.parentNode.insertBefore(newFItem,endMarker.parentNode.parentNode);const markerId=this.markNewAnnotation(annotationNum);if(newFItem.style.display="block",annotationCount.textContent=annotationNum,0!==markerId){const nextMarker=document.getElementById(markerId);setTimeout((()=>nextMarker.focus()),0)}else{const firstTextArea=document.querySelector(".felement .ftextarea");firstTextArea&&setTimeout((()=>firstTextArea.focus()),0)}}markNewAnnotation(annotationNum){const markers=Array.from(document.querySelectorAll("span.ouwiki-annotation-marker"));let nextMarkerId=0;markers.forEach(((marker,index)=>{marker.id===this.currentMarker&&index<markers.length-1&&(nextMarkerId=markers[index+1].id)}));const theMarker=document.getElementById(this.currentMarker);if(theMarker){const visualMarker=document.createElement("strong");visualMarker.textContent="(".concat(annotationNum,")"),theMarker.parentNode.insertBefore(visualMarker,theMarker),theMarker.remove()}return nextMarkerId}}_exports.init=args=>{(new Annotate).init(args)}}));

//# sourceMappingURL=annotate.min.js.map