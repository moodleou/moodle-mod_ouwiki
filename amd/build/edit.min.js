define("mod_ouwiki/edit",["exports","core/str","core/notification","core/config","core/pending","core_form/changechecker"],(function(_exports,_str,_notification,_config,_pending,FormChangeChecker){function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}
/**
   * JavaScript to handle ouwiki.
   *
   * @module mod_ouwiki/edit
   * @copyright 2024 The Open University
   * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_notification=_interopRequireDefault(_notification),_config=_interopRequireDefault(_config),_pending=_interopRequireDefault(_pending),FormChangeChecker=function(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(FormChangeChecker);class Edit{constructor(contextId){this.contextId=contextId,this.init()}init(){const btns=document.querySelectorAll("#id_savechanges, #id_preview");btns.forEach((btn=>{btn.addEventListener("click",(e=>{this.handleButtonClick(e,btns)}))}))}checkSave=(response,e,btns)=>{if(-1===response.responseText.search("ok"))this.saveFail("savefailsession",response.responseText,btns);else{const form=e.target.closest("form");if(form){const clickedButton=e.target;if(clickedButton.name){const hiddenInput=document.createElement("input");hiddenInput.type="hidden",hiddenInput.name=clickedButton.name,hiddenInput.value=clickedButton.value,form.appendChild(hiddenInput)}FormChangeChecker.disableAllChecks(),form.requestSubmit(e.target)}}};checkFailure=(error,btns)=>{this.saveFail("savefailnetwork",error.statusText,btns)};sendCheckRequest=(onSuccess,onFailure)=>{const xhr=new XMLHttpRequest,params=`sesskey=${_config.default.sesskey}&contextid=${this.contextId}`;xhr.open("POST","confirmloggedin.php",!0),xhr.timeout=3e4,xhr.onreadystatechange=()=>{xhr.readyState===XMLHttpRequest.DONE&&(200===xhr.status?onSuccess(xhr):onFailure(xhr))},xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),xhr.send(params)};handleButtonClick=(e,btns)=>{e.preventDefault();const pendingPromise=new _pending.default("mod/ouwiki:savecheck");this.sendCheckRequest((response=>{this.checkSave(response,e,btns),pendingPromise.resolve()}),(error=>{this.checkFailure(error,btns),pendingPromise.resolve()}))};saveFail=async(stringName,info,btns)=>{let content=await(0,_str.getString)("savefailtext","ouwiki",await(0,_str.getString)(stringName,"ouwiki"));content+=`[${info}]`,btns.forEach((btn=>{btn.disabled=!0})),_notification.default.alert(await(0,_str.getString)("savefailtitle","ouwiki"),content);const cancel=document.querySelector("#id_cancel");cancel&&cancel.addEventListener("click",(()=>{const form=document.querySelector(".region-content .mform");if(form){const text=form.querySelector("#fitem_id_message"),attach=form.querySelector("#fitem_id_attachments");text&&text.remove(),attach&&attach.remove(),form.method="get"}}))}}_exports.init=contextId=>new Edit(contextId)}));

//# sourceMappingURL=edit.min.js.map